trigger: none

parameters:
  - name: SECRET_NAME
    displayName: 'Secret Name'
    type: string
    default: ''
  - name: SECRET_VALUE
    displayName: 'Secret Value'
    type: string
    default: ''
  - name: KEY_VAULT_REGION
    displayName: 'Key Vault Region'
    type: string
    default: ''
    values:
      - UKSO
      - USE
      - US-east-2
  - name: KEY_VAULT_NAME
    displayName: 'Key Vault Name'
    type: string
    default: ''
    values:
      - SI-KV-AVI
      - AVI_KV-prd
      - AVI-KV-nonprd

jobs:
- job: CreateKeyVaultSecret
  displayName: 'Create Key Vault Secret'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true
  - script: |
      python -m pip install azure-identity azure-keyvault-secrets azure-core
      python - <<EOF
      from azure.identity import DefaultAzureCredential
      from azure.keyvault.secrets import SecretClient
      from azure.core.pipeline.transport import AioHttpTransport

      def get_key_vault_url(region, vault_name):
          if region == 'USE':
              return f'https://{vault_name}.vault.azure.net'
          elif region == 'UKSO':
              return f'https://{vault_name}.vault.azure.net'
          elif region == 'US-east-2':
              return f'https://{vault_name}.vault.azure.net'
          else:
              raise Exception(f'Invalid region selected: {region}')

      key_vault_region = '$(KEY_VAULT_REGION)'
      key_vault_name = '$(KEY_VAULT_NAME)'
      key_vault_url = get_key_vault_url(key_vault_region, key_vault_name)
      credential = DefaultAzureCredential()

      def create_secret(secret_name, secret_value):
          transport = AioHttpTransport(max_connections=5)
          secret_client = SecretClient(vault_url=key_vault_url, credential=credential, transport=transport)
          secret_client.set_secret(secret_name, secret_value)
          print(f'Secret "{secret_name}" created successfully.')

      create_secret("$(SECRET_NAME)", "$(SECRET_VALUE)")
      EOF
